[alembic]
# path to migration scripts
script_location = alembic
sqlalchemy.url = sqlite:///./security_center.db

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# timezone to use when rendering the date
# within the migration file as well as the filename.
# string value is passed to dateutil.tz.gettz()
# leave blank for localtime
timezone = UTC

# max length of characters to apply to the
# "slug" field
# truncate_slug_length = 40

# set to 'true' to run the environment file as a
# standalone script, false to use exec() it
# standalone_mode = false

# enable logging file rotation
# logging_file_rotation = false

# revision environment configuration
# (this section is just an example)
[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# after new migration files are written
# format is: post_write_hooks = mypackage.mymodule:myfunc
#           or post_write_hooks = mypackage.mymodule:myfunc;func2

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S